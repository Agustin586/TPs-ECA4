//$file${.::mef_awg.h} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
//
// Model: dpp.qm
// File:  ${.::mef_awg.h}
//
// This code has been generated by QM 6.2.3 <www.state-machine.com/qm>.
// DO NOT EDIT THIS FILE MANUALLY. All your changes will be lost.
//
//                 ____________________________________
//                /                                   /
//               /    GGGGGGG    PPPPPPPP   LL       /
//              /   GG     GG   PP     PP  LL       /
//             /   GG          PP     PP  LL       /
//            /   GG   GGGGG  PPPPPPPP   LL       /
//           /   GG      GG  PP         LL       /
//          /     GGGGGGG   PP         LLLLLLL  /
//         /___________________________________/
//
// Copyright (c) 2005 Quantum Leaps, LLC
// SPDX-License-Identifier: GPL-3.0-or-later
//
// This generated code is open-source software licensed under the GNU
// General Public License (GPL) as published by the Free Software Foundation
// (see <https://www.gnu.org/licenses>).
//
// NOTE:
// The GPL does NOT permit the incorporation of this code into proprietary
// programs. Please contact Quantum Leaps for commercial licensing options,
// which expressly supersede the GPL and are designed explicitly for licensees
// interested in retaining the proprietary status of the generated code.
//
// Quantum Leaps contact information:
// <www.state-machine.com/licensing>
// <info@state-machine.com>
//
//$endhead${.::mef_awg.h} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#include "qpc.h"

#ifndef MEF_AWG_H_
#define MEF_AWG_H_

//$declare ${AOs_Awg}

//$declare${Shared_Awg} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv

//${Shared_Awg::setEvt_Econder} ..............................................
void setEvt_Econder(void);

//${Shared_Awg::setEvt_Confirm} ..............................................
void setEvt_Confirm(void);

//${Shared_Awg::setEvt_Init} .................................................
void setEvt_Init(void);

//${Shared_Awg::Awg_ctor} ....................................................
void Awg_ctor(void);

//${Shared_Awg::setEvt_Avanc} ................................................
void setEvt_Avanc(void);

//${Shared_Awg::AwgSignals} ..................................................
enum AwgSignals {
    ENCODER_SIG = Q_USER_SIG,
    INIT_SIG,
    AVANC_SIG,
    ATRAS_SIG,
    CONFIRM_SIG,
    TIMER_1SEG_SIG,
    MULTIPLICADOR_SIG,
    STOP_SIG,
    TIMER_3SEG_SIG,
};

//${Shared_Awg::AO_Awg} ......................................................
extern QActive * const AO_Awg;

//${Shared_Awg::setEvt_Atras} ................................................
void setEvt_Atras(void);

//${Shared_Awg::setEvt_init} .................................................
void setEvt_init(void);

//${Shared_Awg::setEvt_Multiplicador} ........................................
void setEvt_Multiplicador(void);

//${Shared_Awg::Multiplador_t} ...............................................
enum Multiplador_t {
    MULTIPLICADOR_FREQ = 0,
    MULTIPLICADOR_AMP,
    MULTIPLICADOR_OFFSET,
};

//${Shared_Awg::getCurrentState} .............................................
uint8_t getCurrentState(void);

//${Shared_Awg::StateConfig_t} ...............................................
enum StateConfig_t {
    CONFIG_FUNCION = 0,
    CONFIG_FREQ,
    CONFIG_AMP,
    CONFIG_OFFSET,
    CONFIG_CONFIRM,
    SALIDA_EN,
};

//${Shared_Awg::setEvtStop} ..................................................
void setEvtStop(void);
//$enddecl${Shared_Awg} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

#endif
