<?xml version="1.0" encoding="UTF-8"?>
<model version="6.2.3" links="1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://www.state-machine.com/qm/qm.xsd">
 <documentation>Dining Philosopher Problem example</documentation>
 <!--${qpc}-->
 <framework name="qpc"/>
 <!--${AO}-->
 <package name="AO" stereotype="0x02">
  <!--${AO::Blinky}-->
  <class name="Blinky" superclass="qpc::QActive">
   <!--${AO::Blinky::timeEvt}-->
   <attribute name="timeEvt" type="QTimeEvt" visibility="0x02" properties="0x00"/>
   <!--${AO::Blinky::inst}-->
   <attribute name="inst" type="Blinky" visibility="0x00" properties="0x01"/>
   <!--${AO::Blinky::SM}-->
   <statechart properties="0x03">
    <documentation>Blinky state machine</documentation>
    <!--${AO::Blinky::SM::initial}-->
    <initial target="../1">
     <action>(void)par; // unused parameter
QTimeEvt_armX(&amp;me-&gt;timeEvt,
BSP_TICKS_PER_SEC, BSP_TICKS_PER_SEC);</action>
     <initial_glyph conn="2,3,5,1,20,4,-4">
      <action box="0,-2,6,2"/>
     </initial_glyph>
    </initial>
    <!--${AO::Blinky::SM::off}-->
    <state name="off">
     <entry>BSP_ledOff();</entry>
     <!--${AO::Blinky::SM::off::TIMEOUT}-->
     <tran trig="TIMEOUT" target="../../2">
      <tran_glyph conn="2,13,3,1,18,6,-2">
       <action box="0,-2,8,2"/>
      </tran_glyph>
     </tran>
     <state_glyph node="2,5,16,10">
      <entry box="1,2,12,4"/>
     </state_glyph>
    </state>
    <!--${AO::Blinky::SM::on}-->
    <state name="on">
     <entry>BSP_ledOn();</entry>
     <!--${AO::Blinky::SM::on::TIMEOUT}-->
     <tran trig="TIMEOUT" target="../../1">
      <tran_glyph conn="2,25,3,1,20,-15,-4">
       <action box="0,-2,8,2"/>
      </tran_glyph>
     </tran>
     <state_glyph node="2,17,16,10">
      <entry box="1,2,12,4"/>
     </state_glyph>
    </state>
    <state_diagram size="28,29"/>
   </statechart>
  </class>
 </package>
 <!--${Shared_Blink}-->
 <package name="Shared_Blink" stereotype="0x02">
  <!--${Shared_Blink::BlinkySignals}-->
  <attribute name="BlinkySignals" type="enum" visibility="0x04" properties="0x00">
   <code>{
    TIMEOUT_SIG = Q_USER_SIG,
};</code>
  </attribute>
  <!--${Shared_Blink::AO_Blinky}-->
  <attribute name="AO_Blinky" type="QActive * const" visibility="0x00" properties="0x00">
   <code>= &amp;Blinky_inst.super;</code>
  </attribute>
  <!--${Shared_Blink::Blinky_ctor}-->
  <operation name="Blinky_ctor" type="void" visibility="0x00" properties="0x01">
   <documentation>The Blinky &quot;constructor&quot; is provided outside of the Blinky class, so that it can be used independently from the class. This is part of the &quot;opaque pointer&quot; design idiom.</documentation>
   <code>Blinky * const me = &amp;Blinky_inst;
QActive_ctor(&amp;me-&gt;super, Q_STATE_CAST(&amp;Blinky_initial));
QTimeEvt_ctorX(&amp;me-&gt;timeEvt, &amp;me-&gt;super, TIMEOUT_SIG, 0U);</code>
  </operation>
 </package>
 <!--${.}-->
 <directory name=".">
  <!--${.::dpp.h}-->
  <file name="dpp.h">
   <text>#ifndef DPP_H_
#define DPP_H_

//$declare ${Shared}

$declare ${Shared_Blink} 

#ifdef QXK_H_

extern QXThread * const TH_XThread1;
void XThread1_ctor(void);

extern QXThread * const TH_XThread2;
void XThread2_ctor(void);

extern QXSemaphore TH_sema;
extern QXMutex TH_mutex;

#endif // QXK_H_

#endif // DPP_H_</text>
  </file>
  <!--${.::blinky.c}-->
  <file name="blinky.c">
   <text>#include &quot;qpc.h&quot;    // QP/C real-time embedded framework
#include &quot;bsp.h&quot;    // Board Support Package interface
#include &quot;dpp.h&quot;

// ask QM to declare the Blinky class
$declare ${AO::Blinky}

$define ${Shared_Blink}

$define ${AO::Blinky}</text>
  </file>
 </directory>
</model>
